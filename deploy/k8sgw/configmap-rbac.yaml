# kind: ClusterRole
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   namespace: default
#   name: service-reader
# rules:
# - apiGroups: [""] # "" indicates the core API group
#   resources: ["services"]
#   verbs: ["get", "watch", "list"]

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  namespace: default
  name: configmap-reader
rules:
  - apiGroups: [""]
    #
    # at the HTTP level, the name of the resource for accessing Secret
    # objects is "secrets"
    resources: ["configmaps"]
    verbs: ["get", "watch", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "jane" to read pods in the "default" namespace.
# You need to already have a Role named "pod-reader" in that namespace.
kind: RoleBinding
metadata:
  name: configmap-reader
  namespace: default
subjects:
  # You can specify more than one "subject"
  - kind: User
    name: "system:serviceaccount:default:default" # "name" is case sensitive
    apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name: configmap-reader # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
